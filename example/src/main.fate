use std::alloc;
use std::io::puts;

enum FooBar {
    Foo,
    Bar {
        foo: u8,
        bar: *u24,
    }
    Baz<u8>,
    Qux<*u8, u16>
}

fn main(): void {
    let string: str = "hello world";

    let foobar: FooBar = FooBar::Baz<0, 132>;
    // match foobar {
    //     Foo => puts("foo"),
    //     Bar {foo, bar} => puts("bar"),
    //     Baz<foo> => puts("baz"),
    //     Qux<start, len> => puts("qux"),
    // }
}

pub fn sin_cos(n: u8): <u8, u8> {
    return <sin(n), cos(n)>
}

struct String {
    ptr: *mut u8,
    capactity: u16,
    len: u16,
}

impl String {
    pub fn new(): String {
        // Alloc a single slot for 
        let ptr = alloc::malloc(1);
        String {
            ptr = ptr,
            capacity = 1,
            len = 0,
        }
    }

    pub fn from(s: str): String {
        let ptr = alloc::malloc(s.len());
        String {
            ptr = ptr,
            capacity = s.len(),
            
        }
    }
}
